{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"add",
				"addFaultSetters"
			],
			[
				"whe",
				"where"
			],
			[
				"copi",
				"copySchemeTimes"
			],
			[
				"prima",
				"primaryIOs"
			],
			[
				"sc",
				"schemeDst"
			],
			[
				"parseBlock",
				"parseBlocks"
			],
			[
				"Exit",
				"ExitFailure"
			],
			[
				"program",
				"programFromScheme"
			],
			[
				"sch",
				"schemeSrc"
			],
			[
				"with",
				"withIndex"
			],
			[
				"par",
				"parseTestsFile"
			],
			[
				"Fault",
				"FaultDescription"
			],
			[
				"group",
				"groupby"
			],
			[
				"grou",
				"groupBy"
			],
			[
				"toGra",
				"toGraphName"
			],
			[
				"join",
				"joinLines"
			],
			[
				"parseFau",
				"parseFault"
			],
			[
				"genera",
				"generateGraph"
			],
			[
				"sche",
				"schemeB"
			],
			[
				"copy",
				"copyScheme"
			],
			[
				"ma",
				"mapGenName"
			],
			[
				"mesh",
				"meshgrid"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/Main.hs",
			"settings":
			{
				"buffer_size": 3771,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/Ouroboros/Fault/Language.hs",
			"settings":
			{
				"buffer_size": 849,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "module Ouroboros.Fault (\n	parseFaultsFile\n) where\n\nimport Ouroboros.Common\nimport Ouroboros.Fault.Language\nimport Ouroboros.Fault.Parser\n\naddSimilarFaults :: [[Identifier]] -> Faults -> Faults\naddSimilarFaults groups fs = applySetters addFaultSetters fs\n	where\n		addFaultSetters = map makeFaultSetter $ faults fs\n\n		makeFaultSetter (Node fId fType) = addNodeFaults (getSameNodes groups ) (Node fId fType)\n\naddFault :: Fault -> Faults -> Faults\naddFault f fs = Faults {\n	faults = f : (faults fs)\n}\n\naddNodeFaults :: [Identifier] -> Fault -> Faults -> Faults\naddNodeFaults nodeIds f fs = applySetters addFaultSetters fs\n	where\n		addFaultSetters = map (\\x -> addNodeFault x f) nodeIds\n\naddNodeFault :: Identifier -> Fault -> Faults -> Faults\naddNodeFault nodeId f fs = addFault newFault fs\n	where\n		newFault = f { node = nodeId }\n\naddJunctionFaults :: [(Identifier, Identifier)] -> Fault -> Faults -> Faults\naddJunctionFaults bindings f fs = applySetters addFaultSetters fs\n	where\n		addFaultSetters = map (\\x -> addJunctionFault x f) bindings \n\naddJunctionFault :: (Identifier, Identifier) -> Fault -> Faults -> Faults\naddJunctionFault binding f fs = addFault newFault fs\n	where\n		newFault = f { nodes = binding }\n\ngetSameNodes :: [[Identifier]] -> Identifier -> [Identifier]\ngetSameNodes groups nodeId = filter (/= nodeId) neededGroup\n	where\n		neededGroups = filter (nodeId `elem`) groups\n		neededGroup = concat neededGroups\n",
			"file": "src/Ouroboros/Fault.hs",
			"file_size": 1445,
			"file_write_time": 129968545983822421,
			"settings":
			{
				"buffer_size": 1423,
				"line_ending": "Windows"
			}
		},
		{
			"file": "c17.bench",
			"settings":
			{
				"buffer_size": 78,
				"line_ending": "Windows"
			}
		},
		{
			"file": "c17.flt",
			"settings":
			{
				"buffer_size": 5,
				"line_ending": "Windows"
			}
		},
		{
			"file": "c17.test",
			"settings":
			{
				"buffer_size": 208,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/Ouroboros/Test/Language.hs",
			"settings":
			{
				"buffer_size": 1221,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/Ouroboros/Test.hs",
			"settings":
			{
				"buffer_size": 4025,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/Ouroboros/Fault/Parser.hs",
			"settings":
			{
				"buffer_size": 1218,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/Ouroboros/Test/Parser.hs",
			"settings":
			{
				"buffer_size": 1591,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 311.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"haskell",
				"Haskell Buddy: Check code"
			],
			[
				"sublime",
				"Preferences: SublimeHaskell Settings â€“ User"
			],
			[
				"show",
				"SublimeHaskell: Show type"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/wacca/Documents/GitHub/jabberbot-0.15/examples/broadcast.py",
		"/C/Users/wacca/Documents/GitHub/jabberbot-0.15/jabberbot.py",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Fault.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Scheme/Definition.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Test/Language.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Test/Parser.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/1.test",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/2.test",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Scheme/Common.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Test.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/c17.test",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/c17.out",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/Ouroboros.cabal",
		"/I/data/bits.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Scheme/Deafen.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Bench/Parser.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Fault/Parser.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Common.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Main.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Bench/Language.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Fault/Language.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Bench.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Scheme/ToScheme.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Scheme.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Graphviz/Language.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/c17.bench",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Graphviz.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/c17.out.bench",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/c17.flt",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Scheme/RemoveRecursion.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Scheme/Concatenate.hs",
		"/C/Users/wacca/Documents/GitHub/konfa/main/tests.py",
		"/C/Users/wacca/Documents/GitHub/konfa/main/models.py",
		"/C/Users/wacca/Documents/GitHub/konfa/main/views.py",
		"/C/Users/wacca/Documents/GitHub/konfa/main/__init__.py",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/hope.warning",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/c17.out.dot",
		"/D/study/Projects/GitHub/Ouroboros/.project",
		"/C/Users/wacca/AppData/Roaming/Sublime Text 2/Packages/User/SublimeHaskell.sublime-settings",
		"/C/Users/wacca/AppData/Roaming/Sublime Text 2/Packages/SublimeHaskell/SublimeHaskell.sublime-settings",
		"/I/data/Ouroboros/Ouroboros/src/Ouroboros/Scheme.hs",
		"/I/data/Ouroboros/Ouroboros/Ouroboros.cabal",
		"/I/data/Ouroboros/Ouroboros/src/Ouroboros/Scheme/Common.hs",
		"/I/data/Ouroboros/Ouroboros/src/Ouroboros/Scheme/Copy.hs",
		"/I/data/Ouroboros/Ouroboros/src/Ouroboros/Scheme/Definition.hs",
		"/C/Users/wacca/Documents/GitHub/Ouroboros/src/Ouroboros/Scheme/Copy.hs",
		"/C/Users/wacca/Documents/coslab1.txt",
		"/C/Users/wacca/Documents/coslab2.txt"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"idle_proc",
			"tests",
			"    ",
			"vectors",
			"Vectors",
			"vectors",
			"handleError",
			"fault",
			"nodes",
			"parseId",
			"getNames",
			"arg.y",
			"arg.x",
			"x(2)",
			"x(1)",
			"y",
			"x",
			".-",
			".+"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"	",
			"identifier",
			"arg(2)",
			"arg(1)",
			"arg.y",
			"arg.x",
			"x(2)",
			"y(1)",
			"x(1)",
			"-",
			"+"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/Main.hs",
					"settings":
					{
						"buffer_size": 3771,
						"regions":
						{
						},
						"selection":
						[
							[
								1888,
								1888
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 516.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/Ouroboros/Fault/Language.hs",
					"settings":
					{
						"buffer_size": 849,
						"regions":
						{
						},
						"selection":
						[
							[
								246,
								246
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/Ouroboros/Fault.hs",
					"settings":
					{
						"buffer_size": 1423,
						"regions":
						{
						},
						"selection":
						[
							[
								154,
								154
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "c17.bench",
					"settings":
					{
						"buffer_size": 78,
						"regions":
						{
						},
						"selection":
						[
							[
								78,
								78
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "c17.flt",
					"settings":
					{
						"buffer_size": 5,
						"regions":
						{
						},
						"selection":
						[
							[
								5,
								5
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "c17.test",
					"settings":
					{
						"buffer_size": 208,
						"regions":
						{
						},
						"selection":
						[
							[
								208,
								208
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/Ouroboros/Test/Language.hs",
					"settings":
					{
						"buffer_size": 1221,
						"regions":
						{
						},
						"selection":
						[
							[
								495,
								495
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/Ouroboros/Test.hs",
					"settings":
					{
						"buffer_size": 4025,
						"regions":
						{
						},
						"selection":
						[
							[
								1161,
								1161
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/Ouroboros/Fault/Parser.hs",
					"settings":
					{
						"buffer_size": 1218,
						"regions":
						{
						},
						"selection":
						[
							[
								440,
								440
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/Ouroboros/Test/Parser.hs",
					"settings":
					{
						"buffer_size": 1591,
						"regions":
						{
						},
						"selection":
						[
							[
								1371,
								1371
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 495.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.HaskellBuddyPanel":
	{
		"height": 0.0
	},
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"gra",
				"src/Ouroboros/Graphviz/Language.hs"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 205.0,
	"status_bar_visible": true
}
